syntax = 'proto3';
import "components.proto";
package alpha.protort.protocol;


message NodeInfo
{
    string node_name = 1;
    string node_addr = 2;
    uint32 node_port = 3;
}

message NodeInfoList
{
    repeated NodeInfo  nodeinfo= 1;
}

message Instance
{
    string name = 1;
    ComponentKind kind = 2;
}

message InstanceList
{
    repeated Instance instance = 1;
}

message Map
{
    string node_name = 1;
    string instance_name = 2;
}

message MapList
{
    repeated Map map = 1;
}

message Connection
{
    ComponentEndpoint source = 1;
    ComponentEndpoint destination = 2;
}

message ConnectionList
{
    repeated Connection connection = 1;
}

enum CommandType
{
    Deploy = 0;         //деплой схемы приложения
    Start = 1;          //старт ноды: старт роутера и компонентов
    Stop = 2;           //остановка ноды:
    GetNodeStatus = 3;  //запрос на статус ноды
    Update = 4;         //обновить схему развёрывания на лету
    SetNodeProp = 5;    //установка свойств ноды
}

message DeployPacket
{
    NodeInfoList node_info_list = 1;
    InstanceList instance_list = 2;
    MapList map_list = 3;
    ConnectionList connrction_list = 4;
}

message NodeProp
{
    NodeInfo node_info = 1;
}

message StatusPacket //возвращается после отсылки комманды getstatus, может пригодиться потом
{

}

message Error  //возвращается во время деплоя, апдейта или старта
{
    uint32 code = 1;
    string text = 2;
}

message CommandPacket //todo - переделать с использованием oneof
{
    CommandType command_type = 1;
    DeployPacket deploy_body = 2;
    NodeProp node_info = 3;
}
